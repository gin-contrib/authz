name: Run Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.41.1
          args: --verbose
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: [1.13, 1.14, 1.15, 1.16, 1.17]
    name: ${{ matrix.os }} @ Go ${{ matrix.go }}
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: on
      TESTTAGS: ${{ matrix.test-tags }}
      GOPROXY: https://proxy.golang.org
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - uses: actions/cache@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: actions/cache@v2
        if: matrix.os == 'macos-latest'
        with:
          path: |
            ~/Library/Caches/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Tests
        run: |
          go test -v -covermode=atomic -coverprofile=coverage.out

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          flags: ${{ matrix.os }},go-${{ matrix.go }},${{ matrix.test-tags }}
